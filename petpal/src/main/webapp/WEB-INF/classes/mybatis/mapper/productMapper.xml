<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.petpal.mapper.ProductMapper">
	<select id="findById" parameterType="Long" resultType="com.shop.petpal.domain.Product">
		SELECT p.productNum, p.categoryNum, p.productClass, p.productStatus, p.species, 
            c.categoryName, p.productName, p.price, p.brand, po.optionCount,
			p.discountRate, NVL(p.discountAmount,0) discountAmount, p.deliveryCharge, 
			p.thumbnail, p.content, p.regDate, ps.totalStock,
			NVL(rating, 0) rating, NVL(reviewCount, 0) reviewCount,
			NVL(questionCount, 0) questionCount,
			TO_CHAR(startDate, 'YYYY-MM-DD HH24:MI') startDate,
			TO_CHAR(endDate, 'YYYY-MM-DD HH24:MI') endDate,
			NVL(showSpecial, 0) showSpecial
		FROM product p
		JOIN category c ON p.categoryNum = c.categoryNum
		LEFT OUTER JOIN (
			SELECT productNum, NVL(SUM(totalStock), 0) totalStock
			FROM productStock
			GROUP BY productNum
		) ps ON p.productNum = ps.productNum		
		LEFT OUTER JOIN specialDetail d ON p.productNum = d.productNum
		LEFT OUTER JOIN special s ON d.specialNum = s.specialNum
		LEFT OUTER JOIN (
			SELECT productNum, ROUND(AVG(rating), 1) rating, COUNT(*) reviewCount
			FROM review
			WHERE showReview = 1
			GROUP BY productNum
		) t ON p.productNum = t.productNum
        LEFT OUTER JOIN ( 
            SELECT productNum, COUNT(*) optionCount
            FROM productOption
            GROUP BY productNum
        ) po ON p.productNum = po.productNum
		LEFT OUTER JOIN (
			SELECT productNum, COUNT(*) questionCount
			FROM productQna
			WHERE showQuestion = 1			
			GROUP BY productNum
		) q ON p.productNum = q.productNum
		WHERE p.productStatus = 1 AND p.productNum = #{productNum}
	</select>
	
	<select id="listProductFile" parameterType="Long" resultType="com.shop.petpal.domain.Product">
		SELECT fileNum, productNum, fileName
		FROM productImage
		WHERE productNum = #{productNum}
	</select>
	
	<select id="listCategory" resultType="com.shop.petpal.domain.Product">
		SELECT categoryNum, categoryName, parentCategory, sortOrder, species
		FROM category
		WHERE species = #{species} AND parentCategory IS NULL
		ORDER BY sortOrder
	</select>
	
	
	
	<select id="listSubCategory" parameterType="Long" resultType="com.shop.petpal.domain.Product">
		SELECT categoryNum, categoryName, parentCategory, sortOrder, species
		FROM category
		WHERE parentCategory = #{parentCategory}
		ORDER BY sortOrder
	</select>
	
	<select id="listProductOption" parameterType="Long" resultType="com.shop.petpal.domain.Product">
		SELECT optionNum, optionName, productNum, parentOption
		FROM productOption
		WHERE productNum = #{productNum}
		ORDER BY parentOption NULLS FIRST, parentOption
	</select>
	
	<select id="listOptionDetail" parameterType="Long" resultType="com.shop.petpal.domain.Product">
		SELECT detailNum, optionValue, optionNum
		FROM optionDetail
		WHERE optionNum = #{optionNum}
		ORDER BY detailNum
	</select>
	
	<select id="listOptionDetailStock" parameterType="map" resultType="com.shop.petpal.domain.Product">
		SELECT ps.stockNum, ps.productNum, ps.detailNum1 detailNum, ps.detailNum2, ps.totalStock, 
			op1.optionNum optionNum1, op1.optionName optionName1, 
			op2.optionNum optionNum2, op2.optionName optionName2,
			od1.detailNum detailNum1, od1.optionValue optionValue1,
			od2.detailNum detailNum2, od2.optionValue optionValue2
		FROM (
			SELECT stockNum, productNum, totalStock, detailNum1, detailNum2
			FROM productStock
			WHERE productNum = #{productNum}
			<if test="detailNum1 != null and detailNum1 != 0">
				AND detailNum1 = #{detailNum1}
			</if>
		) ps
		LEFT OUTER JOIN (
			SELECT optionNum, productNum, optionName, parentOption
			FROM productOption
			WHERE productNum = #{productNum} AND parentOption IS NULL
		) op1 ON ps.productNum = op1.productNum
		LEFT OUTER JOIN (
			SELECT optionNum, productNum, optionName, parentOption
			FROM productOption
			WHERE productNum = #{productNum} AND parentOption IS NOT NULL
		) op2 ON op1.optionNum = op2.parentOption
		LEFT OUTER JOIN optionDetail od1 ON ps.detailNum1 = od1.detailNum
		LEFT OUTER JOIN optionDetail od2 ON ps.detailNum2 = od2.detailNum
		WHERE NVL(ps.totalStock, 0) &gt; 0
		ORDER BY ps.detailNum1, ps.detailNum2
	</select>
</mapper>