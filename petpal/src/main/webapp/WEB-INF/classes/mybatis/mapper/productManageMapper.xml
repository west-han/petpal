<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.petpal.admin.mapper.ProductManageMapper">
	<select id="listCategory" parameterType="Integer" resultType="map">
		SELECT categoryNum, categoryName, sortOrder
		FROM category
		WHERE parentCategory IS NULL AND species = #{species}
		ORDER BY sortOrder
	</select>
	
	<select id="listSubCategory" parameterType="Integer" resultType="map">
		SELECT categoryNum, categoryName, parentCategory, sortOrder, species
		FROM category
		WHERE parentCategory = #{parentCategory}
		ORDER BY sortOrder
	</select>
	
	<!-- NOTE: 속성값이 존재하지 않으면 나오지 않도록 작성, 필요하면 LEFT OUTER JOIN으로 변경하면 됨 -->
	<select id="listAttribute" parameterType="Integer"
	 		resultType="com.shop.petpal.admin.domain.Attribute">
        SELECT  a.attributeNum, attributeName, categoryNum, attrDtlNum, attrDtlName
		FROM attribute a
		JOIN attributeDetail d
			ON a.attributeNum = d.attributeNum
		WHERE categoryNum = #{categoryNum}
		ORDER BY attributeNum, attrDtlNum
	</select>

	<select id="productSeq" resultType="Long">
		SELECT product_seq.NEXTVAL FROM dual
	</select>
	
	<select id="optionSeq" resultType="Long">
		SELECT productOption_seq.NEXTVAL FROM dual
	</select>
	
	<select id="attrDtlSeq" resultType="Long">
		SELECT attributeDetail.NEXTVAL FROM dual
	</select>

	<insert id="insertProduct" parameterType="com.shop.petpal.admin.domain.ProductManage">
		INSERT INTO product (productNum, productName, productClass, species, price, discountRate,
			deliveryCharge, content, thumbnail, productStatus, regDate, modifyDate, origin,
			brand, manufacturer, categoryNum, discountAmount)
		VALUES (#{productNum}, #{productName}, #{productClass}, #{species}, #{price},
			#{discountRate}, #{deliveryCharge}, #{content}, #{thumbnail}, #{productStatus},
			SYSDATE, SYSDATE, #{origin}, #{brand}, #{manufacturer}, #{categoryNum}, #{discountAmount})
	</insert>
	
	<insert id="insertProductImage" parameterType="com.shop.petpal.admin.domain.ProductManage">
		INSERT INTO productImage (fileNum, productNum, filename)
		VALUES (productImage_seq.NEXTVAL, #{productNum}, #{filename})
	</insert>
	
	<insert id="insertProductOption" parameterType="com.shop.petpal.admin.domain.ProductManage">
		INSERT INTO productOption (optionNum, optionName, productNum, parentOption)
		VALUES (#{optionNum}, #{optionName}, #{productNum}, #{parentOption, jdbcType=INTEGER})
	</insert>
	
	<insert id="insertProductOptionDetail" parameterType="com.shop.petpal.admin.domain.ProductManage">
		INSERT INTO optionDetail (detailNum, optionValue, optionNum)
		VALUES (optionDetail_seq.NEXTVAL, #{optionValue}, #{optionNum})
	</insert>
	
	<insert id="insertProductAttribute" parameterType="Long">
			INSERT INTO productAttribute (productNum, attrDtlNum)
			VALUES (#{productNum}, #{attrDtlNum})
	</insert>
	
	<select id="listProduct" parameterType="map" resultType="com.shop.petpal.admin.domain.ProductManage">
		SELECT p.productNum,thumbnail,cg.categoryName, p.productName, p.price, p.discountRate, NVL(t.totalStock, 0) totalStock,p.productStatus,
    p.modifyDate
		FROM product p
		LEFT OUTER JOIN (
			SELECT productNum, NVL(SUM(totalStock), 0) totalStock
			FROM productStock
			GROUP BY productNum
		) t ON p.productNum = t.productNum
		LEFT OUTER JOIN 
    category cg ON p.categoryNum = cg.categoryNum
		<where>
			p.species = #{species}
			<if test="categoryNum != 0">
				AND parentCategory = #{parentCategory}
			</if>
			<if test="parentCategory != 0">
				AND p.categoryNum = #{categoryNum}
			</if>
		</where>
		ORDER BY p.productNum DESC
	<!--	OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY  -->
	</select>
	
	<select id="productCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM product p
		JOIN category cg ON p.categoryNum = cg.categoryNum
		<where>
			p.species = #{species}
			<if test="categoryNum != 0">
				AND parentCategory = #{parentCategory}
			</if>
			<if test="parentCategory != 0">
				AND p.categoryNum = #{categoryNum}
			</if>
		</where>
	</select>
	
	<!-- 상품 재고 -->
	<insert id="insertProductStock" parameterType="com.shop.petpal.admin.domain.ProductStockManage">
		INSERT INTO productStock(stockNum, productNum, detailNum1, detailNum2, totalStock)
			VALUES (productStock_seq.NEXTVAL, #{productNum}, 
				#{detailNum1, jdbcType=BIGINT}, #{detailNum2, jdbcType=BIGINT},
				#{totalStock})
	</insert>
	
	<update id="updateProductStock" parameterType="com.shop.petpal.admin.domain.ProductStockManage">
		UPDATE productStock SET totalStock = #{totalStock}
		WHERE stockNum = #{stockNum}
	</update>

	<select id="optionCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*) optionCount
	    FROM productOption
	    WHERE productNum = #{productNum}
		GROUP BY productNum
	</select>

	<select id="listProductStock" parameterType="map" resultType="com.shop.petpal.admin.domain.ProductStockManage">
		SELECT p.productNum, p.productName, 
			po1.optionNum, po1.optionName,
			po2.optionNum optionNum2, po2.optionName optionName2,
			d1.detailNum, d1.optionValue, 
			d2.detailNum detailNum2, d2.optionValue optionValue2,
		 	ps.stockNum, NVL(ps.totalStock, 0) totalStock
		FROM product p 
		LEFT OUTER JOIN productOption po1 ON p.productNum = po1.productNum AND parentOption IS NULL
		LEFT OUTER JOIN productOption po2 ON po1.optionNum = po2.parentOption
        LEFT OUTER JOIN optionDetail d1 ON po1.optionNum = d1.optionNum
        LEFT OUTER JOIN optionDetail d2 ON po2.optionNum = d2.optionNum
        <choose>
        	<when test="optionCount == 0">
        		LEFT OUTER JOIN productStock ps ON p.productNum = ps.productNum
        	</when>
        	<when test="optionCount == 1">
        		LEFT OUTER JOIN productStock ps ON d1.detailNum = ps.detailNum1
        	</when>
        	<otherwise>
        		LEFT OUTER JOIN productStock ps ON d1.detailNum = ps.detailNum1 AND d2.detailNum = ps.detailNum2
        	</otherwise>
        </choose>
		WHERE p.productNum = #{productNum}
        ORDER BY detailNum, detailNum2
	</select>
	

</mapper>