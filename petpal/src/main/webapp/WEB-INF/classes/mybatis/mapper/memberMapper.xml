<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.petpal.mapper.MemberMapper">
	<!-- 받아올 정보: 로그인에 필요한 정보와 세션에 저장해야 할 정보 -->
	<!-- 회원번호, 이메일, 패스워드, 로그인실패횟수 / 이름, 닉네임, 회원등급, 가입일 -->
	<select id="loginMember" parameterType="String" resultType="com.shop.petpal.domain.Member">
		SELECT m1.memberNum, email, password, failureCount, lastLogin,
			userName, nickname, membershipNum, regDate
		FROM member1 m1
		JOIN member2 m2 ON m1.memberNum = m2.memberNum
		WHERE email = #{email} AND enabled != 0
	</select>
	
	<update id="updateLastLogin" parameterType="String">
		UPDATE member1
		SET lastLogin = SYSDATE, failureCount = 0
		WHERE email = #{email}
	</update>
	
	<update id="updateFailureCount" parameterType="String">
		UPDATE member1
		SET failureCount = failureCount + 1
		WHERE email = #{email}
	</update>
	
	<update id="updateFailureCountReset" parameterType="String">
		UPDATE member1 
		SET failureCount = 0
		WHERE email = #{email}
	</update>
	
	<select id="findById" parameterType="String">
		SELECT m1.memberNum, email, socialLogin, password, regDate, notificationConsent, enabled, 
			failureCount, lastLogin, TO_CHAR(birth, 'YYYY-MM-DD') birth, address1, address2, tel,
			nickname, userName,	postalCode, area, membershipNum
		FROM member1 m1
		JOIN member2 m2 ON m1.memberNum = m2.memberNum
		WHERE email = #{email}
	</select>
	
	<select id="findByMemberNum" parameterType="Long" resultType="com.shop.petpal.domain.Member">
		SELECT m1.memberNum, email, socialLogin, password, regDate, notificationConsent, enabled, 
			failureCount, lastLogin, TO_CHAR(birth, 'YYYY-MM-DD') birth, address1, address2, tel,
			nickname, userName,	postalCode, area, membershipNum
		FROM member1 m1
		JOIN member2 m2 ON m1.memberNum = m2.memberNum
		WHERE memberNum = #{memberNum}
	</select>
	
	<select id="checkFailureCount" parameterType="String" resultType="Integer">
		SELECT failureCount
		FROM member1
		WHERE email = #{email}
	</select>
	
	<sql id="set-stateCode">
		, state = #{stateCode}
	</sql>
	
	<select id="updateMemberEnabled" parameterType="map">
		UPDATE member1
		SET enabled = #{enabled}
		
		<if test="stateCode != null">
			<include refid="set-stateCode"/>
		</if>
		
		WHERE email = #{email}
	</select>

	
	<!-- 회원가입 할때마다 시퀀스 증가 -->
	<select id="memberSeq" resultType="Long">
		SELECT member1_seq.NEXTVAL FROM dual
	</select>
	
	
	
	<!-- 회원가입1 -->
	<insert id="insertMember1" parameterType="com.shop.petpal.domain.Member">
		INSERT INTO member1(memberNum,email,socialLogin,password,regDate,notificationConsent,
			enabled,lastLogin,failureCount,state)
		VALUES (member1_seq.CURRVAL, #{email}, 0, #{password}, SYSDATE, 1, 1, SYSDATE, 0, 0) 
    </insert>
    
    <!-- 회원가입2 -->
	<insert id="insertMember2" parameterType="com.shop.petpal.domain.Member">
		INSERT INTO member2(memberNum,birth,address1,address2,tel,
			nickName,userName,postalCode,membershipNum)
		VALUES (member1_seq.CURRVAL, #{birth}, #{address1}, #{address2},
			 #{tel}, #{nickname}, #{userName}, #{postalCode}, 1) 
    </insert>
    
    <!-- 회원가입 권한 부여 -->
    <insert id="insertMemberAuthority" parameterType="com.shop.petpal.domain.Member">
		INSERT INTO MemberAuthority(authority,email)
		VALUES(#{authority}, #{email})
	</insert>
	
	
	
    
</mapper>