<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.petpal.admin.mapper.OrderManageMapper">
	<sql id="where-list">
		<choose>
			<when test="schType == 'orderNum'">
				(po.orderNum = #{kwd})
			</when>
			<when test="schType == 'invoiceNumber'">
				(invoiceNumber = #{kwd})
			</when>
			<when test="schType == 'orderDate'">
				(TO_CHAR(orderDate, 'YYYYMMDD') = #{kwd})
			</when>
			<when test="schType == 'userName'">
				INSTR(userName = #{kwd}) &gt; 0
			</when>
		</choose>
	</sql>
	
	<select id="countOrder" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM productOrder po
		LEFT OUTER JOIN member1 m1
			ON m1.memberNum = po.memberNum
		<where>
			<if test="state == 1">
				(po.orderState = 0 OR po.orderState = 1)
			</if>
			<if test="state == 2">
				(po.orderState &gt;= 2 AND po.orderState &lt;= 5)
			</if>
			<if test="state == 3">
				po.orderState = 6
			</if>
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"></include>
			</if>
		</where>
	</select>

	<select id="listOrder" parameterType="map" resultType="com.shop.petpal.admin.domain.OrderManage">
		SELECT po.orderNum, po.memberNum, NVL(userName, '고객'), totalMoney, usedPoint, usedCoupon, deliveryCharge,
			payment, orderState, cancelAmount, TO_CHAR(orderDate, 'YYYY-MM-DD') orderDate, invoiceNumber,
			deliveryNum
		FROM productOrder po
		LEFT OUTER JOIN member2 m ON po.memberNum = m.memberNum
		LEFT OUTER JOIN (
			SELECT orderNum, COUNT(*) totalOrderCount, SUM(amount) totalQuantity,
				COUNT(DECODE(detailState, 3, 1, 4, 1, 5, 1, 10, 1, 11, 1, 12, 1)) detailCancelCount
			FROM orderDetail
			GROUP BY orderNum
		) od ON po.orderNum = od.orderNum
		<where>
			<if test="state == 1">
				(po.orderState = 0 OR po.orderState = 1)
			</if>
			<if test="state == 2">
				(po.orderState &gt;= 2 AND po.orderState &lt;= 5)
			</if>
			<if test="state == 3">
				po.orderState = 6
			</if>
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY po.orderNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="listDeliveryCompany" resultType="map">
		SELECT deliveryNum, deliveryName, deliveryTel
		FROM deliveryCompany
	</select>
	
	<select id="findById" parameterType="String" resultType="com.shop.petpal.admin.domain.OrderManage">
		SELECT po.orderNum, po.memberNum, totalMoney, usedPoint, usedCoupon, deliveryCharge, payment,
			orderState, cancelAmount, orderStateDate, invoiceNumber, orderDate, NVL(m2.userName, '고객'),
			m1.email, totalMoney, payClassify, cardName, authNumber, authDate
		FROM productOrder po
		LEFT OUTER JOIN member1 m1 ON po.memberNum = m1.memberNum
		LEFT OUTER JOIN member2 m2 ON m1.memberNum = m2.memberNum
		LEFT OUTER JOIN payDetail pd ON po.orderNum = pd.orderNum
		WHERE po.orderNum = #{orderNum}
	</select>
	
	<select id="findByOrderDetails" parameterType="String" resultType="com.shop.petpal.admin.domain.OrderDetailManage">
		SELECT od.orderNum, od.orderDetailNum, amount, priceOrig, priceDiscount, pricePay, savePoint,
			od.productNum, ps.detailNum1, ps.detailNum2, od.detailState, productName, d1.optionValue, d2.optionValue optionValue2
		FROM orderDetail od
		JOIN product p ON od.productNum = p.productNum
		LEFT OUTER JOIN productStock ps ON ps.stockNum = od.stockNum
		LEFT OUTER JOIN productOption po ON p.productNum = po.productNum
		LEFT OUTER JOIN optionDetail d1 ON ps.detailNum1 = d1.detailNum
		LEFT OUTER JOIN optionDetail d2 ON ps.detailNum1 = d2.detailNum
		WHERE od.orderNum = #{orderNum}
	</select>
	
	<select id="countOrderDetail" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM productOrder po
		LEFT OUTER JOIN member1 m ON po.memberNum = m.memberNum
		JOIN orderDetail od ON po.orderNum = od.orderNum
	</select>
	
	<select id="listOrderDetail" parameterType="map" resultType="com.shop.petpal.admin.domain.OrderDetailManage">
		SELECT po.orderNum, po.memberNum, orderDate, totalMoney, usedPoint, usedCoupon, payment,
			deliveryCharge, orrderState, deliveryName, invoiceNumber,
			od.orderDetailNuum, od.productNum, detailNum, detailNum2, amount, origPrice, priceDiscount, pricePay,
			savePoint, NVL(m1.userName, '고객') userName, m.userId,
			p.savedMoney, p.productName, d1.optionValue, d2.optionValue optionValue2
		FROM productOrder po
		JOIN orderDetail od ON po.orderNum = od.orderNum
		JOIN producut p ON od.productNum = p.productNum
		JOIN productStock ps ON od.stockNum = ps.stockNum
		LEFT OUTER JOIN optionDetail d1 ON od.detailNum = d1.detailNum
		LEFT OUTER JOIN optionDetail d2 ON od.detailNum = d2.detailNum
		LEFT OUTER JOIN member1 m1 ON po.memberNum = m1.memberNum
		LEFT OUTER JOIN member2 m2 ON m1.memberNum = m2.memberNum
		ORDER BY po.orderNum DESC, od.orderDetailiNum
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<update id="updateOrderState" parameterType="map">
		UPDATE productOrder SET orderState = #{orderState}, orderStateDate = SYSDATE
		WHERE orderNum = #{orderNum}
	</update>
	
	<select id="findByTotalCancelAmount" parameterType="String" resultType="Integer">
		SELECT NVL(SUM(pricePay), 0) totalCancelAmount
		FROM orderDetail
		WHERE orderNum = #{orderNum} AND (detailState = 3 OR detailState = 5 OR detailState = 12)
	</select>
	
	<select id="countTotalOrder" parameterType="String" resultType="Integer">
		SELECT NVL(COUNT(*), 0) orderCount
		FROM orderDetail
		WHERE orderNum = #{orderNum} AND (detailState = 3 OR detailState = 5 OR detailState = 12) 
	</select>
	
	<update id="updateCancelAmount" parameterType="map">
		UPDATE productOrder SET cancelAmount = #{cancelAmount}
		WHERE orderNum = #{orderNum}
	</update>
	
	<update id="updateOrderInvoiceNumber">
		UPDATE productOrder SET orderState = #{orderState}, orderStateDate = SYSDATE,
			deliveryNum = #{deliveryNum}, invoiceNumber = #{invoiceNumber}
		WHERE orderNum = #{orderNum}
	</update>
	
	<update id="updateOrderDetailState" parameterType="map">
		UPDATE orderDetail SET detailState = #{detailState}
		WHERE orderDetailNum = #{orderDetailNum}
	</update>
	
	<insert id="insertDetailStateInfo" parameterType="map">
		INSERT INTO detailStateInfo(stateNum, orderDetailNum, memberNum, detailState, stateMemo,
			detailStateDate) VALUES (detailState_seq.NEXTVAL, #{orderDetailNum}, #{memberNum},
			#{detailState}, #{stateMemo,jdbcType=VARCHAR}, SYSDATE)
	</insert>
	
	<select id="listDetailStateInfo" parameterType="long" resultType="map">
		SELECT stateNum, orderDetailNum, d.memberNum, NVL(userName, '고객') userName, detailState,
			 stateMemo, TO_CHAR(detailStateDate, 'YYYYMMDD HH24:MI') detailStateDate
		FROM detailStateInfo d
		LEFT OUTER JOIN member1 m ON d.memberNum = m.memberNum
		LEFT OUTER JOIN member2 m2 ON m.memberNum = m2.memberNum
		WHERE orderDetailNum = #{orderDetailNum}
		ORDER BY stateNum DESC
	</select>
	
	<update id="updateProductStockInc">
		UPDATE productStock SET totalStock = totalStock + #{amount}
		<where>
			WHERE productNum = #{productNum}
			<if test="detailNum != null">
				AND detailNum = #{detailNum}
			</if>
			<if test="detailNum2 != null">
				AND detailNum2 = #{detailNum2}
			</if>
		</where>
	</update>
	
	<update id="updateAutoPurchaseconfirmation">
		UPDATE orderDetail SET detailState = 2
		WHERE orderDetailNum IN (
			SELECT orderDetailNum
			FROM productOrder po
			JOIN orderDetail od ON po.orderNum = od.orderNum
			WHERE po.orderState = 5 AND od.detailState = 0
				AND TRUNC(SYSDATE - orderStateDate) &gt;= 5
		)
	</update>
	
	<insert id="insertUserPoint" parameterType="com.shop.petpal.domain.UserPoint">
		INSERT INTO userPoint(pointNum, memberNum, regDate, classify, point, balance)
			VALUES(userPoint_seq.NEXTVAL, #{memberNum}, SYSDATE, #{classify}, #{point},
				NVL((SELECT balance FROM userPoint
						WHERE memberNum = #{memberNum}
						ORDER BY pointNum DESC
						FETCH FIRST 1 ROWS ONLY ), 0) + #{point}
			)
	</insert>
</mapper>