<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.shop.petpal"/>

	<http auto-config="true" use-expressions="true">
        <csrf disabled="true"/>
        
        <!-- 스마트 에디터 에러 해결: iframe 허용 -->
        <headers>
        	<frame-options policy="SAMEORIGIN"/>
        	<hsts disabled="true"/>
        </headers>
        
        <!-- 모든 접근자를 항상 승인 -->
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/1" access="permitAll"/>
        <intercept-url pattern="/2" access="permitAll"/>
        <intercept-url pattern="/setSpecies/**" access="permitAll"/>
        <intercept-url pattern="/index.jsp" access="permitAll"/>
        <intercept-url pattern="/member/login" access="permitAll"/>
        <intercept-url pattern="/member/join" access="permitAll"/>
        <intercept-url pattern="/member/userIdCheck" access="permitAll"/>
        <intercept-url pattern="/member/complete" access="permitAll"/>
        <intercept-url pattern="/member/pwdFind" access="permitAll"/>
        <intercept-url pattern="/member/expired" access="permitAll"/>
        <intercept-url pattern="/main/main" access="permitAll"/>
        <intercept-url pattern="/member/userEmailCheck" access="permitAll"/>
        <intercept-url pattern="/member/userNicknameCheck" access="permitAll"/>
        
        
        <!-- 상품 조회 화면 접근 제한 해제 -->
        <intercept-url pattern="/products/**" access="permitAll"/>
        <intercept-url pattern="/product/**" access="permitAll"/>
        
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/uploads/image/**" access="permitAll"/>
        <intercept-url pattern="/uploads/product/**" access="permitAll"/>
        
        <!-- admin 페이지 -->
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN' , 'ROLE_EMP')"/>
        
        <!-- 모든 페이지 -->
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_EMP', 'ROLE_USER')"/>
        
        <!-- 사용자 정의 로그인 폼 -->
        <form-login
        	login-page="/member/login"
        	login-processing-url="/member/login"
        	
        	username-parameter="email"
        	password-parameter="userPwd"
        	default-target-url="/"
        	always-use-default-target="false"
        	authentication-success-handler-ref="LoginSuccessHandler"
        	authentication-failure-handler-ref="LoginFailureHandler"
        />
        
        <logout
        	logout-url="/member/logout"
        	invalidate-session="true"
        	logout-success-url="/"
        />
        
        <!-- 접근 권한이 없는 경우 -->
        <access-denied-handler error-page="/member/noAuthorized"/>
        
        <!-- 동일한 아이디로 동시에 한 명만 로그인(기존 세션 만료) -->
        <session-management>
        	<concurrency-control max-sessions="1"
        		expired-url="/member/expired"/>
        </session-management>
        
        		<!-- AJAX 로그인 검사 필터 -->
		<custom-filter ref="ajaxSessionTimeoutFilter"
			after="EXCEPTION_TRANSLATION_FILTER"/>
			
	</http>

	<beans:bean id="LoginSuccessHandler" class="com.shop.petpal.security.LoginSuccessHandler">
		<beans:property name="defaultUrl" value="/"/>
	</beans:bean>

	<beans:bean id="LoginFailureHandler" class="com.shop.petpal.security.LoginFailureHandler">
		<beans:property name="defaultFailureUrl" value="/member/login?login_error"/>
	</beans:bean>

	<!-- 시큐리티에서 로그인 하려면 반드시 username(아이디), password(패스워드), enabled 세 컬럼이 필요함 -->
	<!-- 권한: username, authority 컬럼이 필요 -->
	<jdbc-user-service data-source-ref="dataSource"
		id="userService"
		users-by-username-query="SELECT email AS username, password, enabled FROM member1 WHERE email = ?"
		authorities-by-username-query="SELECT email AS username, 'ROLE_' || authority AS authority FROM memberAuthority WHERE email = ?"/>

	<!-- 패스워드에 특화된 password hashing function -->
	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>

	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="bcryptEncoder"/>
		</authentication-provider>
	</authentication-manager>

	<!-- AJAX 작업에서 로그인이 안 된 경우 실행할 필터 -->
	<beans:bean id="ajaxSessionTimeoutFilter" 
			class="com.shop.petpal.security.AjaxSessionTimeoutFilter">
		<beans:property name="ajaxHeader" value="AJAX"/>
	</beans:bean>
</beans:beans>